// Code generated by MockGen. DO NOT EDIT.
// Source: remote.go

// Package mock_remote is a generated GoMock package.
package mock_remote

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRecSysProvider is a mock of RecSysProvider interface.
type MockRecSysProvider struct {
	ctrl     *gomock.Controller
	recorder *MockRecSysProviderMockRecorder
}

// MockRecSysProviderMockRecorder is the mock recorder for MockRecSysProvider.
type MockRecSysProviderMockRecorder struct {
	mock *MockRecSysProvider
}

// NewMockRecSysProvider creates a new mock instance.
func NewMockRecSysProvider(ctrl *gomock.Controller) *MockRecSysProvider {
	mock := &MockRecSysProvider{ctrl: ctrl}
	mock.recorder = &MockRecSysProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecSysProvider) EXPECT() *MockRecSysProviderMockRecorder {
	return m.recorder
}

// GetRecs mocks base method.
func (m *MockRecSysProvider) GetRecs(id uint64) ([]uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecs", id)
	ret0, _ := ret[0].([]uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecs indicates an expected call of GetRecs.
func (mr *MockRecSysProviderMockRecorder) GetRecs(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecs", reflect.TypeOf((*MockRecSysProvider)(nil).GetRecs), id)
}
